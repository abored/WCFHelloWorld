//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelloClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TripleOfInt", Namespace="http://schemas.datacontract.org/2004/07/HelloServer")]
    [System.SerializableAttribute()]
    public partial class TripleOfInt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int I1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int I2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int I3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int I1 {
            get {
                return this.I1Field;
            }
            set {
                if ((this.I1Field.Equals(value) != true)) {
                    this.I1Field = value;
                    this.RaisePropertyChanged("I1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int I2 {
            get {
                return this.I2Field;
            }
            set {
                if ((this.I2Field.Equals(value) != true)) {
                    this.I2Field = value;
                    this.RaisePropertyChanged("I2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int I3 {
            get {
                return this.I3Field;
            }
            set {
                if ((this.I3Field.Equals(value) != true)) {
                    this.I3Field = value;
                    this.RaisePropertyChanged("I3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IHelloService")]
    public interface IHelloService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/SayHello", ReplyAction="http://tempuri.org/IHelloService/SayHelloResponse")]
        string SayHello(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/SayHello", ReplyAction="http://tempuri.org/IHelloService/SayHelloResponse")]
        System.Threading.Tasks.Task<string> SayHelloAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/GetNameID", ReplyAction="http://tempuri.org/IHelloService/GetNameIDResponse")]
        string GetNameID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/GetNameID", ReplyAction="http://tempuri.org/IHelloService/GetNameIDResponse")]
        System.Threading.Tasks.Task<string> GetNameIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/addTriple", ReplyAction="http://tempuri.org/IHelloService/addTripleResponse")]
        HelloClient.ServiceReference1.TripleOfInt addTriple(HelloClient.ServiceReference1.TripleOfInt t1, HelloClient.ServiceReference1.TripleOfInt t2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHelloService/addTriple", ReplyAction="http://tempuri.org/IHelloService/addTripleResponse")]
        System.Threading.Tasks.Task<HelloClient.ServiceReference1.TripleOfInt> addTripleAsync(HelloClient.ServiceReference1.TripleOfInt t1, HelloClient.ServiceReference1.TripleOfInt t2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelloServiceChannel : HelloClient.ServiceReference1.IHelloService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloServiceClient : System.ServiceModel.ClientBase<HelloClient.ServiceReference1.IHelloService>, HelloClient.ServiceReference1.IHelloService {
        
        public HelloServiceClient() {
        }
        
        public HelloServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SayHello(string s) {
            return base.Channel.SayHello(s);
        }
        
        public System.Threading.Tasks.Task<string> SayHelloAsync(string s) {
            return base.Channel.SayHelloAsync(s);
        }
        
        public string GetNameID(int id) {
            return base.Channel.GetNameID(id);
        }
        
        public System.Threading.Tasks.Task<string> GetNameIDAsync(int id) {
            return base.Channel.GetNameIDAsync(id);
        }
        
        public HelloClient.ServiceReference1.TripleOfInt addTriple(HelloClient.ServiceReference1.TripleOfInt t1, HelloClient.ServiceReference1.TripleOfInt t2) {
            return base.Channel.addTriple(t1, t2);
        }
        
        public System.Threading.Tasks.Task<HelloClient.ServiceReference1.TripleOfInt> addTripleAsync(HelloClient.ServiceReference1.TripleOfInt t1, HelloClient.ServiceReference1.TripleOfInt t2) {
            return base.Channel.addTripleAsync(t1, t2);
        }
    }
}
